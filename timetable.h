#include <stdlib.h>

#ifndef _TIMETABLE_H
#define _TIMETABLE_H 1

#define MIN_NUMBER 1
#define MAX_NUMBER 9999
#define MIN_HOURS 0
#define MAX_HOURS 23
#define MIN_MINUTES 0
#define MAX_MINUTES 59
#define DESTINATION_SIZE 33

/**********************************************************************
 * Структура записи о рейсе в расписании
 **********************************************************************/
typedef struct {
	int number; /* номер рейса */
	int hours; /* час вылета */
	int minutes; /* минуты вылета */
	char destination[DESTINATION_SIZE]; /* пункт назначения */
} Row;

/**********************************************************************
 * Указатель на структуру записи о рейсе в расписании
 **********************************************************************/
typedef Row *RowPtr;

/**********************************************************************
 * Массив указателей на структуры записей о рейсах в расписании
 **********************************************************************/
typedef RowPtr Rows;

/**********************************************************************
 * Расписание
 **********************************************************************/
typedef struct {
	size_t count; /* количество рейсов */
	Rows rows; /* массив записей о рейсах */
} Timetable;
typedef Timetable *TabPtr;

/**********************************************************************
 * Выделяет память для массива структур записей о рейсах
 * и возвращает указатель на начало массива
 **********************************************************************/
Rows new_rows(size_t count);

/**********************************************************************
 * Создает структуру расписания нужного размера
 * и возвращает указатель на нее
 **********************************************************************/
TabPtr new_timetable(size_t count);

/**********************************************************************
 * Освобождает память занятую расписанием
 **********************************************************************/
void free_timetable(TabPtr tab);

/**********************************************************************
 * Создает структуру расписания нужного размера, копирует в нее массив
 * структур записей о рейсах и возвращает указатель на нее
 **********************************************************************/
TabPtr make_timetable(const Rows rows, size_t count);

/**********************************************************************
 * Копирует расписание и добавляет в него запись о рейсе
 **********************************************************************/
TabPtr add_row(const TabPtr tab, const RowPtr row);

/**********************************************************************
 * Фильтрует расписание по пункту назначения
 **********************************************************************/
TabPtr filter_table(const TabPtr tab, const char *destination);

#endif /* timetable.h  */

